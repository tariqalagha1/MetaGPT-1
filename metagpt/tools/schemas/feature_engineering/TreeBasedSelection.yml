TreeBasedSelection:
  type: class
  description: "Select features based on tree-based model and remove features with low importance."
  methods:
    __init__:
      description: "Initialize self."
      parameters:
        properties:
          label_col:
            type: str
            description: "Label column name."
          task_type:
            type: str
            description: "Task type, 'cls' for classification, 'mcls' for multi-class classification, 'reg' for regression."
            enum:
              - cls
              - mcls
              - reg
        required:
          - label_col
          - task_type
    fit:
      description: "Fit the TreeBasedSelection model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
    transform:
      description: "Transform the input DataFrame with the fitted model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame contain label_col."
    fit_transform:
      description: "Fit and transform the input DataFrame."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame contain label_col."