FillMissingValue:
  type: class
  description: "Completing missing values with simple strategies"
  methods:
    __init__:
      description: "Initialize self."
      parameters:
        properties:
          features:
            type: list
            description: "columns to be processed"
          strategy:
            type: str
            description: "the imputation strategy, notice mean/median can only be used for numeric features"
            default: mean
            enum:
              - mean
              - median
              - most_frequent
              - constant
          fill_value:
            type: int
            description: "fill_value is used to replace all occurrences of missing_values"
            default: null
        required:
          - features
    fit:
      description: "Fit the FillMissingValue model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
    transform:
      description: "Transform the input DataFrame with the fitted model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."
    fit_transform:
      description: "Fit and transform the input DataFrame."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."

MinMaxScale:
  type: class
  description: "Transform features by scaling each feature to a range, witch is (0, 1)"
  methods:
    __init__:
      description: "Initialize self."
      parameters:
        properties:
          features:
            type: list
            description: "columns to be processed"
        required:
          - features
    fit:
      description: "Fit the MinMaxScale model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
    transform:
      description: "Transform the input DataFrame with the fitted model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."
    fit_transform:
      description: "Fit and transform the input DataFrame."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."

StandardScale:
  type: class
  description: "Standardize features by removing the mean and scaling to unit variance"
  methods:
    __init__:
      description: "Initialize self."
      parameters:
        properties:
          features:
            type: list
            description: "columns to be processed"
        required:
          - features
    fit:
      description: "Fit the StandardScale model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
    transform:
      description: "Transform the input DataFrame with the fitted model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."
    fit_transform:
      description: "Fit and transform the input DataFrame."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."

MaxAbsScale:
  type: class
  description: "cale each feature by its maximum absolute value"
  methods:
    __init__:
      description: "Initialize self."
      parameters:
        properties:
          features:
            type: list
            description: "columns to be processed"
        required:
          - features
    fit:
      description: "Fit the MaxAbsScale model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
    transform:
      description: "Transform the input DataFrame with the fitted model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."
    fit_transform:
      description: "Fit and transform the input DataFrame."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."

LabelEncode:
  type: class
  description: "Apply label encoding to specified categorical columns in-place."
  methods:
    __init__:
      description: "Initialize self."
      parameters:
        properties:
          features:
            type: list
            description: "Categorical columns to be label encoded"
        required:
          - features
    fit:
      description: "Fit the LabelEncode model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
    transform:
      description: "Transform the input DataFrame with the fitted model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."
    fit_transform:
      description: "Fit and transform the input DataFrame."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."

OneHotEncode:
  type: class
  description: "Apply one-hot encoding to specified categorical columns, the original columns will be dropped."
  methods:
    __init__:
      description: "Initialize self."
      parameters:
        properties:
          features:
            type: list
            description: "Categorical columns to be one-hot encoded and dropped"
        required:
          - features
    fit:
      description: "Fit the OneHotEncoding model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
    transform:
      description: "Transform the input DataFrame with the fitted model."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."
    fit_transform:
      description: "Fit and transform the input DataFrame."
      parameters:
        properties:
          df:
            type: DataFrame
            description: "The input DataFrame."
        required:
          - df
      returns:
        df:
          type: DataFrame
          description: "The transformed DataFrame."